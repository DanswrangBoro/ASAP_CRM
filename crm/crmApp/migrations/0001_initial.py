# Generated by Django 5.0.2 on 2024-03-22 10:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MarkupControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('percentage', 'Percentage'), ('amount', 'Amount')], default='percentage', max_length=20)),
                ('activation', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PNR_TABLE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.TextField(max_length=200)),
                ('phone', models.TextField(max_length=10)),
                ('ref_id', models.TextField(max_length=200)),
                ('address', models.TextField(default='', max_length=255)),
                ('zip', models.TextField(max_length=200)),
                ('city', models.TextField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Price_manipulation_amount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Price_manipulation_percentage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phoneNumber', models.CharField(max_length=15)),
                ('role', models.CharField(max_length=20)),
                ('team', models.CharField(max_length=100)),
                ('blocked', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(max_length=100)),
                ('confirmation_no', models.CharField(blank=True, max_length=255, null=True)),
                ('passenger_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('trip_type', models.CharField(max_length=50)),
                ('reference_id', models.CharField(max_length=100)),
                ('departure', models.CharField(max_length=100)),
                ('departure_date', models.DateField()),
                ('arrival', models.CharField(max_length=100)),
                ('arrival_date', models.DateField()),
                ('num_passengers', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('change_date', models.DateTimeField(blank=True, null=True)),
                ('card_number', models.IntegerField(default='1234567890123456', max_length=16)),
                ('lead_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lead_bookings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chargeback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_card_no', models.CharField(max_length=20)),
                ('confirmation_mail_status', models.CharField(max_length=50)),
                ('reason', models.CharField(max_length=100)),
                ('chargeback_received_date', models.DateField()),
                ('chargeback_status', models.CharField(default='pending', max_length=50)),
                ('chargeback_lead_status', models.CharField(default='pending', max_length=50)),
                ('Booking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lead_bookings', to='crmApp.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('markup_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description1', models.CharField(max_length=100)),
                ('total1', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description2', models.CharField(max_length=100)),
                ('total2', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('booking', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='crmApp.booking')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('description', models.CharField(max_length=255)),
                ('invoice', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='crmApp.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='MCO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crmApp.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=100)),
                ('transaction_status', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField()),
                ('cardholder_name', models.CharField(max_length=100)),
                ('card_number', models.IntegerField(max_length=16, validators=[django.core.validators.MaxValueValidator(9999999999999999), django.core.validators.MinValueValidator(1000000000000000)])),
                ('expiry_date', models.DateField()),
                ('cvv', models.CharField(max_length=4)),
                ('card_type', models.CharField(max_length=20)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crmApp.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('refund_reason', models.TextField()),
                ('refund_type', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('booking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crmApp.booking')),
            ],
        ),
        migrations.CreateModel(
            name='RejectedBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('rejection_date', models.DateField(auto_now_add=True)),
                ('booking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crmApp.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_date', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
